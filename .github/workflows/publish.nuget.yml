name: Publish nuget package

on:
  workflow_dispatch:
    inputs:
      semverIncrementLevel:
        description: 'Level of the semver (major.minor.patch) to be increased to get the new package version.'
        required: true
        default: 'patch'
  push:
    branches:
      - master

env:
  SOLUTION_PATH: "src/Trakx.CryptoCompare.ApiClient.sln"
  PROJECT_PATH: "src/Trakx.CryptoCompare.ApiClient/Trakx.CryptoCompare.ApiClient.csproj"
  PROJECT_WEBSOCKET_PATH: "src/Trakx.CryptoCompare.ApiClient.Websocket/Trakx.CryptoCompare.ApiClient.Websocket.csproj"
  CryptoCompareApiConfiguration__ApiKey: ${{secrets.CRYPTOCOMPARE_API_KEY}}

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Set compilation mode
        id: comp-mode
        run: |
          DEBUGGABLE="${{github.event.inputs.debuggable}}"
          DEBUGGABLE=${DEBUGGABLE:-true}
          if [ [DEBUGGABLE == f*] -o [DEBUGGABLE == F*] ]; then
            COMP_MODE=Release
          else
            COMP_MODE=Debug
          fi
          echo '::set-output name=compilationMode::'$COMP_MODE
          echo "compilation mode set to ${{steps.comp-mode.outputs.compilationMode}}"

      - name: checkout
        uses: actions/checkout@v3

      - name: Bump version
        id: bumpVersion
        uses: trakx/bump-version-action@v8
        with:
          semverIncrementLevel: ${{github.event.inputs.semverIncrementLevel}}
          releaseBranches: master
          githubToken: ${{secrets.GITHUB_TOKEN}}

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: Add github nuget source
        run: dotnet nuget add source "https://nuget.pkg.github.com/trakx/index.json" --name "github" --username "trakx-bot" --password ${{secrets.TRAKX_BOT_READONLY_PAT}} --store-password-in-clear-text

      - name: Install dependencies
        run: dotnet restore ${{env.SOLUTION_PATH}}

      - name: Remove github source
        run: dotnet nuget remove source "github"

      - name: Build
        run: |
          dotnet build ${{env.SOLUTION_PATH}} \
          --configuration ${{steps.comp-mode.outputs.compilationMode}} \
          -p:Version=${{steps.bumpVersion.outputs.assemblyVersion}} \
          -p:SourceRevisionId=${{steps.bumpVersion.outputs.productVersion}} \
          --no-restore

      - name: Test
        run: dotnet test ${{env.SOLUTION_PATH}} --no-restore --verbosity normal

      - name: Package
        run: |
          dotnet pack ${{env.PROJECT_PATH}} --no-build --configuration ${{ steps.comp-mode.outputs.compilationMode }} \
            --output ./nuget/ -p:PackageVersion=${{ steps.bumpVersion.outputs.fullVersion }} --include-symbols --include-source
          dotnet pack ${{env.PROJECT_WEBSOCKET_PATH}} --no-build --configuration ${{ steps.comp-mode.outputs.compilationMode }} \
            --output ./nuget/ -p:PackageVersion=${{ steps.bumpVersion.outputs.fullVersion }} --include-symbols --include-source

      - name: Publish
        # https://github.com/NuGet/Home/issues/8580
        run: |
          ls ./nuget/*.nupkg
          for f in ./nuget/*.symbols.nupkg; do echo "pushing $f file.." && dotnet nuget push $f --api-key ${{secrets.GITHUB_TOKEN}} \
            --source "https://nuget.pkg.github.com/trakx/index.json"; done

      - name: push version tag
        uses: anothrNick/github-tag-action@1.38.0
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          CUSTOM_TAG: v${{steps.bumpVersion.outputs.fullVersion}}
